services: 
  - docker

cache:
  # Caches $HOME/.npm when npm ci is default script command
  # Caches node_modules in all other cases
  npm: true
  directories:
    # we also need to cache folder with Cypress binary
    - ~/.cache

jobs:
  include:
    - stage: tests
      script:
      - npm install -g cypress
      - docker-compose -f docker-compose.prod.yml up -d  
      - cypress run --project ./frontend
    - stage: tests
      env: TZ=America/Chicago
      script:
      - docker-compose -f docker-compose.prod.yml run backend npm test
      # Set the CI environment variables needed for codecov
      - ci_env=`bash <(curl -s https://codecov.io/env)`
      # Run codecov with specified environment variables
      - docker-compose run $ci_env backend npm run coverage
    - stage: deploy
      script: docker-compose -f docker-compose.prod.yml run -v ${PWD}/new_build:/var/www/app/mnt frontend /bin/sh copy_files.sh
      deploy:
        - provider: pages
          verbose: true
          skip_cleanup: true
          local_dir: new_build/
          github-token: $GITHUB_TOKEN
          on:
            branch: master
        # backend deploy
        - provider: script
          script: sh backend/deploy_heroku.sh
